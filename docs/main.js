/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/app.ts":
/*!********************!*\
  !*** ./src/app.ts ***!
  \********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst header_1 = __webpack_require__(/*! ./components/header */ \"./src/components/header.ts\");\nconst router_1 = __webpack_require__(/*! ./router */ \"./src/router.ts\");\nclass App {\n    constructor() {\n        this.router = new router_1.Router();\n        new header_1.Header();\n        window.addEventListener('DOMContentLoaded', this.handlerRouteChanging.bind(this));\n        window.addEventListener('popstate', this.handlerRouteChanging.bind(this));\n    }\n    handlerRouteChanging() {\n        this.router.openRoute();\n    }\n}\n(new App());\n\n\n//# sourceURL=webpack://ten/./src/app.ts?");

/***/ }),

/***/ "./src/components/filterPopup.ts":
/*!***************************************!*\
  !*** ./src/components/filterPopup.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FilterPopup = void 0;\nconst slider_1 = __importDefault(__webpack_require__(/*! ../other/slider */ \"./src/other/slider.js\"));\nclass FilterPopup {\n    constructor(motherElement) {\n        this.template = null;\n        this.rangeSliders = [];\n        this.motherElement = motherElement;\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            this.template = yield fetch('./templates/filtersPopup.html')\n                .then(resp => resp.text())\n                .then(text => {\n                return new DOMParser().parseFromString(text, 'text/html').body.firstChild;\n            });\n            this.motherElement.appendChild(this.template);\n            const rangeSliders = this.template.getElementsByClassName('customRangeSlider');\n            for (let i = 0; i < rangeSliders.length; i++) {\n                const element = rangeSliders[i];\n                console.log(element.offsetWidth);\n                const id = (_a = element.parentElement) === null || _a === void 0 ? void 0 : _a.className;\n                const alias = JSON.parse(element.getAttribute('alias'));\n                const min = element.getAttribute('min');\n                const max = element.getAttribute('max');\n                if (min && max && alias && id) {\n                    this.rangeSliders.push(new slider_1.default(id, element, max, min, alias));\n                }\n                else {\n                    console.error('Somethig went wrong with ' + element);\n                }\n            }\n            // console.log(this.template)\n        });\n    }\n    getFilterSettings() {\n        let filterByProps = [];\n        const propertyCharacteristics = this.template.querySelectorAll('input.btn:checked');\n        for (let i = 0; i < propertyCharacteristics.length; i++) {\n            const element = propertyCharacteristics[i];\n            filterByProps.push(element.id);\n        }\n        let filterByRange = [];\n        for (let i = 0; i < this.rangeSliders.length; i++) {\n            const element = this.rangeSliders[i];\n            filterByRange.push({\n                name: element.id,\n                vals: [parseInt(element.minVal), parseInt(element.maxVal)]\n            });\n        }\n        return [filterByProps, filterByRange];\n    }\n}\nexports.FilterPopup = FilterPopup;\n\n\n//# sourceURL=webpack://ten/./src/components/filterPopup.ts?");

/***/ }),

/***/ "./src/components/header.ts":
/*!**********************************!*\
  !*** ./src/components/header.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Header = void 0;\nclass Header {\n    constructor() {\n        this.scrollToProducts = document.getElementById('scrollToProducts');\n        this.scrollToProducts.onclick = () => {\n            let product = document.getElementById('products');\n            if (!product) {\n                location.href = '#/main';\n                window.onload = () => {\n                    product = document.getElementById('products');\n                };\n            }\n            ;\n            if (!product)\n                throw new Error('section product not found');\n            product.scrollIntoView({ 'behavior': 'smooth' });\n        };\n    }\n}\nexports.Header = Header;\n\n\n//# sourceURL=webpack://ten/./src/components/header.ts?");

/***/ }),

/***/ "./src/components/main.ts":
/*!********************************!*\
  !*** ./src/components/main.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Main = void 0;\nconst filterPopup_1 = __webpack_require__(/*! ./filterPopup */ \"./src/components/filterPopup.ts\");\nconst products_1 = __webpack_require__(/*! ./products */ \"./src/components/products.ts\");\nclass Main {\n    constructor() {\n        this.cardMaster = new products_1.Products();\n        const typeBar = document.getElementById('typeBar');\n        if (!typeBar)\n            throw new Error('typeBar not found');\n        this.filterPopup = new filterPopup_1.FilterPopup(typeBar);\n        this.init();\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.filterPopup.init();\n            document.getElementById('filter_accept').onclick = () => {\n                const filtersSettings = this.filterPopup.getFilterSettings();\n                console.log(filtersSettings);\n                this.cardMaster.filter(filtersSettings);\n            };\n        });\n    }\n}\nexports.Main = Main;\n\n\n//# sourceURL=webpack://ten/./src/components/main.ts?");

/***/ }),

/***/ "./src/components/products.ts":
/*!************************************!*\
  !*** ./src/components/products.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Products = void 0;\nclass Products {\n    constructor() {\n        this.data = null;\n        this.templateTxt = null;\n        this.motherElement = document.getElementById('flats');\n        this.buttonElement = document.getElementById('btn');\n        this.filters = [\"rooms\", \"cost\", \"floor\", \"square\"];\n        if (!this.motherElement)\n            throw new Error('Mother Element \"flats\" not found');\n        Promise.all([\n            fetch('https://gist.githubusercontent.com/Umber-Sai/456f70b577e706ee6367a0d726768af3/raw/498248eaf04111e8fbe4d0b73c7f2ba951f62c90/database.json'),\n            fetch('./templates/card.html')\n        ]).then((_a) => __awaiter(this, [_a], void 0, function* ([dataResp, templateResp]) {\n            this.data = yield dataResp.json();\n            this.templateTxt = yield templateResp.text();\n            if (!this.templateTxt)\n                throw new Error('cards template not found');\n            if (!this.data)\n                throw new Error('flatsData not found');\n            console.log(this.data);\n            this.revealCards(this.data);\n        }));\n    }\n    // private filterBtnQuery(): void {\n    //     let data: FlatsData[] = this.data!;\n    //     this.filters.forEach((filter: string) => {\n    //         const filterInput: HTMLInputElement | null = document.getElementById(filter) as HTMLInputElement;\n    //         if(!filterInput) throw new Error(`\"${filter}\" input not found `);\n    //         const filterVal: string = filterInput.value;\n    //         if (filterVal) {\n    //             data = data.filter(item => item[filter as keyof FlatsData].toString() === filterVal);\n    //         }\n    //     });\n    //     this.motherElement!.innerHTML = ''\n    //     this.revealCards();\n    // }\n    revealCards(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.motherElement.innerHTML = '';\n            data.forEach((flat) => {\n                const card = new DOMParser().parseFromString(this.templateTxt\n                    .replace('{{id}}', flat.id.toString())\n                    .replace('{{cost}}', flat.cost.toString())\n                    .replace('{{square}}', flat.square.toString())\n                    .replace('{{rooms}}', flat.rooms.toString()), \"text/html\").body.firstChild;\n                this.motherElement.appendChild(card);\n            });\n        });\n    }\n    filter(filterSettings) {\n        let flats = this.data;\n        console.log(flats);\n        filterSettings[0].forEach(filter => {\n            flats = flats.filter(item => { var _a; return (_a = item.propertyCharacteristics) === null || _a === void 0 ? void 0 : _a[filter]; });\n        });\n        filterSettings[1].forEach(filter => {\n            console.log(filter);\n            if (filter.vals[0]) {\n                flats = flats.filter(flat => { return filter.vals[0] <= flat[filter.name]; });\n                console.log(flats);\n            }\n            if (filter.vals[1]) {\n                flats = flats.filter(flat => { return flat[filter.name] <= filter.vals[1]; });\n            }\n        });\n        console.log(flats);\n        this.revealCards(flats);\n    }\n}\nexports.Products = Products;\n\n\n//# sourceURL=webpack://ten/./src/components/products.ts?");

/***/ }),

/***/ "./src/config.ts":
/*!***********************!*\
  !*** ./src/config.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.config = void 0;\nexports.config = {\n    startPage: '#/main'\n};\n\n\n//# sourceURL=webpack://ten/./src/config.ts?");

/***/ }),

/***/ "./src/router.ts":
/*!***********************!*\
  !*** ./src/router.ts ***!
  \***********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Router = void 0;\nconst main_1 = __webpack_require__(/*! ./components/main */ \"./src/components/main.ts\");\nconst config_1 = __webpack_require__(/*! ./config */ \"./src/config.ts\");\nclass Router {\n    constructor() {\n        this.styleElement = document.getElementById('styleElement');\n        this.titleElement = document.getElementById('titleElement');\n        this.motherElement = document.getElementById('content');\n        if (!this.motherElement)\n            throw new Error('content Element not found');\n        this.routes = [\n            {\n                name: 'main',\n                rout: '#/main',\n                style: './styles/main.css',\n                template: './templates/main.html',\n                load() {\n                    new main_1.Main();\n                }\n            },\n            {\n                name: 'apartment',\n                rout: '#/apartment',\n                style: './styles/apartment.css',\n                template: './templates/apartment.html',\n                load() {\n                    // new Products()\n                }\n            }\n        ];\n    }\n    openRoute() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const urlRoute = window.location.hash.split('?');\n            const newRout = this.routes.find(item => item.rout === urlRoute[0]);\n            if (newRout) {\n                this.fillPage(newRout);\n                return;\n            }\n            else {\n                window.location.href = config_1.config.startPage;\n            }\n        });\n    }\n    fillPage(newRout) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.styleElement && this.titleElement) {\n                this.styleElement.setAttribute('href', newRout.style);\n                this.titleElement.innerText = newRout.name;\n            }\n            else {\n                throw new Error('styleElement or titleElement Not found');\n            }\n            this.motherElement.innerHTML = yield fetch(newRout.template).then(resp => resp.text());\n            newRout.load();\n        });\n    }\n}\nexports.Router = Router;\n\n\n//# sourceURL=webpack://ten/./src/router.ts?");

/***/ }),

/***/ "./src/other/slider.js":
/*!*****************************!*\
  !*** ./src/other/slider.js ***!
  \*****************************/
/***/ ((module) => {

eval("\nclass CustomRangeSlider {\n    constructor(id, element, max, min, aliasValues) {\n        this.id = id\n        if (!aliasValues) {\n            this.aliasValues = { 0: 0 }\n        } else {\n            this.aliasValues = aliasValues;\n        }\n\n        this.slider = element\n        this.between = document.createElement('div');\n        this.between.className = 'range__between';\n\n        this.button1 = document.createElement('button');\n        this.button2 = document.createElement('button');\n\n        this.inpt1 = document.createElement('input');\n        this.inpt1.setAttribute('min', min);\n        this.inpt1.setAttribute('max', max);\n        this.inpt1.setAttribute('type', 'text');\n\n        this.inpt2 = document.createElement('input');\n        this.inpt2.setAttribute('min', min);\n        this.inpt2.setAttribute('max', max);\n        this.inpt2.setAttribute('type', 'text');\n\n        this.slider.appendChild(this.between)\n        this.slider.appendChild(this.button1)\n        this.slider.appendChild(this.button2)\n        this.slider.appendChild(this.inpt1)\n        this.slider.appendChild(this.inpt2)\n\n        this.min = min;\n        this.max = max;\n\n        this.init()\n    }\n\n\n\n    aliasToKey(value) {\n        const key = Object.keys(this.aliasValues).find(k => this.aliasValues[k] === value);\n        if (key) return key;\n        return value\n    }\n\n    aliasToValue(key) {\n        if (this.aliasValues[key]) return this.aliasValues[key];\n        return key\n    }\n\n    init() {\n\n        /*init*/\n        console.log(this.slider.offsetWidth)\n        const sliderCoords = this.getCoords(this.slider);\n        this.button1.style.marginLeft = '0px';\n        this.button2.style.marginLeft = (this.slider.offsetWidth - this.button1.offsetWidth) + 'px';\n        this.between.style.width = (this.slider.offsetWidth - this.button1.offsetWidth) + 'px';\n        this.inpt1.value = this.aliasToValue(this.min);\n        this.inpt2.value = this.aliasToValue(this.max);\n\n        this.inpt1.onchange = () => {\n            const input1Value = this.aliasToKey(this.inpt1.value)\n            if (parseInt(input1Value) < this.min) {\n                this.inpt1.value = this.aliasToValue(this.min);\n            }\n            if (parseInt(input1Value) > this.max) {\n                this.inpt1.value = this.aliasToValue(this.max);\n            }\n    \n            if (parseInt(input1Value) > parseInt(this.aliasToKey(this.inpt2.value))) {\n                var temp = input1Value;\n                this.inpt1.value = this.aliasToValue(this.inpt2.value);\n                this.inpt2.value = this.aliasToValue(temp);\n            } else {\n                this.inpt1.value = this.aliasToValue(this.inpt1.value)\n            }\n    \n    \n            var sliderCoords = this.getCoords(this.slider);\n            var per1 = parseInt(this.aliasToKey(this.inpt1.value) - this.min) * 100 / (this.max - this.min);\n            var per2 = parseInt(this.aliasToKey(this.inpt2.value) - this.min) * 100 / (this.max - this.min);\n            var left1 = per1 * (this.slider.offsetWidth - this.button1.offsetWidth) / 100;\n            var left2 = per2 * (this.slider.offsetWidth - this.button1.offsetWidth) / 100;\n    \n            this.button1.style.marginLeft = left1 + 'px';\n            this.button2.style.marginLeft = left2 + 'px';\n    \n            if (left1 > left2) {\n                this.between.style.width = (left1 - left2) + 'px';\n                this.between.style.marginLeft = left2 + 'px';\n            }\n            else {\n                this.between.style.width = (left2 - left1) + 'px';\n                this.between.style.marginLeft = left1 + 'px';\n            }\n        }\n        this.inpt2.onchange = () => {\n            const input2Value = this.aliasToKey(this.inpt2.value)\n            if (parseInt(input2Value) < this.min)\n                this.inpt2.value = this.aliasToValue(this.min);\n            if (parseInt(input2Value) > this.max)\n                this.inpt2.value = this.aliasToValue(this.max);\n            if (parseInt(this.aliasToKey(this.inpt1.value)) > parseInt(input2Value)) {\n                var temp = this.inpt1.value;\n                this.inpt1.value = this.aliasToValue(this.inpt2.value);\n                this.inpt2.value = this.aliasToValue(temp);\n            } else {\n                this.inpt2.value = this.aliasToValue(this.inpt2.value)\n            }\n    \n            var sliderCoords = this.getCoords(this.slider);\n            var per1 = parseInt(this.aliasToKey(this.inpt1.value) - this.min) * 100 / (this.max - this.min);\n            var per2 = parseInt(this.aliasToKey(this.inpt2.value) - this.min) * 100 / (this.max - this.min);\n            var left1 = per1 * (this.slider.offsetWidth - this.button1.offsetWidth) / 100;\n            var left2 = per2 * (this.slider.offsetWidth - this.button1.offsetWidth) / 100;\n    \n            this.button1.style.marginLeft = left1 + 'px';\n            this.button2.style.marginLeft = left2 + 'px';\n    \n            if (left1 > left2) {\n                this.between.style.width = (left1 - left2) + 'px';\n                this.between.style.marginLeft = left2 + 'px';\n            }\n            else {\n                this.between.style.width = (left2 - left1) + 'px';\n                this.between.style.marginLeft = left1 + 'px';\n            }\n        }\n        this.button1.onmousedown = (evt) => {\n            const sliderCoords = this.getCoords(this.slider);\n            this.betweenCoords = this.getCoords(this.between);\n            const buttonCoords1 = this.getCoords(this.button1);\n            const buttonCoords2 = this.getCoords(this.button2);\n            const shiftX2 = evt.pageX - buttonCoords2.left;\n            const shiftX1 = evt.pageX - buttonCoords1.left;\n    \n            document.onmousemove = (evt) => {\n                var left1 = evt.pageX - shiftX1 - sliderCoords.left;\n                var right1 = this.slider.offsetWidth - this.button1.offsetWidth;\n                if (left1 < 0) left1 = 0;\n                if (left1 > right1) left1 = right1;\n                this.button1.style.marginLeft = left1 + 'px';\n    \n    \n                const shiftX2 = evt.pageX - buttonCoords2.left;\n                var left2 = evt.pageX - shiftX2 - sliderCoords.left;\n                var right2 = this.slider.offsetWidth - this.button2.offsetWidth;\n                if (left2 < 0) left2 = 0;\n                if (left2 > right2) left2 = right2;\n    \n                var per_min = 0;\n                var per_max = 0;\n                if (left1 > left2) {\n                    this.between.style.width = (left1 - left2) + 'px';\n                    this.between.style.marginLeft = left2 + 'px';\n    \n                    per_min = left2 * 100 / (this.slider.offsetWidth - this.button1.offsetWidth);\n                    per_max = left1 * 100 / (this.slider.offsetWidth - this.button1.offsetWidth);\n                }\n                else {\n                    this.between.style.width = (left2 - left1) + 'px';\n                    this.between.style.marginLeft = left1 + 'px';\n    \n                    per_min = left1 * 100 / (this.slider.offsetWidth - this.button1.offsetWidth);\n                    per_max = left2 * 100 / (this.slider.offsetWidth - this.button1.offsetWidth);\n                }\n                const firstVal = (parseInt(this.min) + Math.round((this.max - this.min) * per_min / 100))\n                this.inpt1.value = this.aliasValues[firstVal] ? this.aliasValues[firstVal] : firstVal;\n                const secondVal = (parseInt(this.min) + Math.round((this.max - this.min) * per_max / 100))\n                this.inpt2.value = this.aliasValues[secondVal] ? this.aliasValues[secondVal] : secondVal;\n    \n            };\n            document.onmouseup = function () {\n                document.onmousemove = document.onmouseup = null;\n            };\n            return false;\n        };\n        this.button2.onmousedown = (evt) => {\n            var sliderCoords = this.getCoords(this.slider);\n            this.betweenCoords = this.getCoords(this.between);\n            var buttonCoords1 = this.getCoords(this.button1);\n            var buttonCoords2 = this.getCoords(this.button2);\n            var shiftX2 = evt.pageX - buttonCoords2.left;\n            var shiftX1 = evt.pageX - buttonCoords1.left;\n    \n            document.onmousemove = (evt) => {\n                var left2 = evt.pageX - shiftX2 - sliderCoords.left;\n                var right2 = this.slider.offsetWidth - this.button2.offsetWidth;\n                if (left2 < 0) left2 = 0;\n                if (left2 > right2) left2 = right2;\n                this.button2.style.marginLeft = left2 + 'px';\n    \n    \n                shiftX1 = evt.pageX - buttonCoords1.left;\n                var left1 = evt.pageX - shiftX1 - sliderCoords.left;\n                var right1 = this.slider.offsetWidth - this.button1.offsetWidth;\n                if (left1 < 0) left1 = 0;\n                if (left1 > right1) left1 = right1;\n    \n                var per_min = 0;\n                var per_max = 0;\n    \n                if (left1 > left2) {\n                    this.between.style.width = (left1 - left2) + 'px';\n                    this.between.style.marginLeft = left2 + 'px';\n                    per_min = left2 * 100 / (this.slider.offsetWidth - this.button1.offsetWidth);\n                    per_max = left1 * 100 / (this.slider.offsetWidth - this.button1.offsetWidth);\n                }\n                else {\n                    this.between.style.width = (left2 - left1) + 'px';\n                    this.between.style.marginLeft = left1 + 'px';\n                    per_min = left1 * 100 / (this.slider.offsetWidth - this.button1.offsetWidth);\n                    per_max = left2 * 100 / (this.slider.offsetWidth - this.button1.offsetWidth);\n                }\n                const firstVal = (parseInt(this.min) + Math.round((this.max - this.min) * per_min / 100))\n                this.inpt1.value = this.aliasValues[firstVal] ? this.aliasValues[firstVal] : firstVal;\n                const secondVal = (parseInt(this.min) + Math.round((this.max - this.min) * per_max / 100));\n                this.inpt2.value = this.aliasValues[secondVal] ? this.aliasValues[secondVal] : secondVal;\n    \n            };\n            document.onmouseup = function () {\n                document.onmousemove = document.onmouseup = null;\n            };\n            return false;\n        };\n\n\n        this.button1.ondragstart = function () {\n            return false;\n        };\n        this.button2.ondragstart = function () {\n            return false;\n        };\n\n    }\n\n\n    getCoords(elem) {\n        var box = elem.getBoundingClientRect();\n        return {\n            top: box.top + pageYOffset,\n            left: box.left + pageXOffset\n        };\n    }\n\n    get minVal () {\n        const val = this.aliasToKey(this.inpt1.value)\n        return val === this.min ? null : val\n    }\n\n    get maxVal () {\n        const val = this.aliasToKey(this.inpt2.value)\n        return val === this.max ? null : val\n    }\n}\n\n\nmodule.exports = CustomRangeSlider;\n\n//# sourceURL=webpack://ten/./src/other/slider.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/app.ts");
/******/ 	
/******/ })()
;